<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2015-11-16T16:00:00-08:00</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember Data 2.2 and 2.3 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/11/17/ember-data-2-2-released.html"/>
    <id>http://emberjs.com/blog/2015/11/17/ember-data-2-2-released.html</id>
    <published>2015-11-16T16:00:00-08:00</published>
    <updated>2015-11-16T16:00:00-08:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember Data 2.2, a minor version release of Ember Data with bug fixes
only, is released today. This release represents the work of over 21
direct contributors, and over 140 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.3 beta.1, the branch of Ember Data that will be released...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember Data 2.2, a minor version release of Ember Data with bug fixes
only, is released today. This release represents the work of over 21
direct contributors, and over 140 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.3 beta.1, the branch of Ember Data that will be released
as stable in roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-data-2-2'&gt;Changes in Ember Data 2.2&lt;/h3&gt;
&lt;p&gt;There are no new features introduced in Ember Data 2.2. Instead the
this release contains bugfixes and documentation improvements for
Ember Data.&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://github.com/emberjs/data/blob/v2.2.0/CHANGELOG.md"&gt;Ember Data 2.2.0 CHANGELOG&lt;/a&gt; for a full list of all changes.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-2-3-beta'&gt;Ember.js 2.3 beta&lt;/h3&gt;
&lt;p&gt;Ember.js 2.3 beta is released today, and in six weeks it will become the
new stable version of Ember.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-cli-addon'&gt;Ember CLI Addon&lt;/h4&gt;
&lt;p&gt;Previously the primary way of consuming Ember Data was using the bower
package. The existing Ember Data addon for Ember CLI added Ember Data
to the &lt;code&gt;bower.json&lt;/code&gt; file. This often lead to some confusion because
updating the version of the Ember Data addon on &lt;code&gt;packages.json&lt;/code&gt; would
not update the version of Ember Data included in your app.&lt;/p&gt;

&lt;p&gt;Starting in the Ember Data 2.3.0 release, Ember Data will be packaged
and distributed as an Ember CLI addon. This will allow users to
consume Ember Data in the same way that they would any other
addon. Additionally, contributing to Ember Data should be easier as
building and testing the Ember Data project now follows Ember CLI
addon conventions.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://github.com/fivetanley"&gt;fivetanley&lt;/a&gt; for his hard
work in porting Ember Data to the addon infrastructure.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.3, review the
&lt;a href="https://github.com/emberjs/data/blob/v2.3.0-beta.1/CHANGELOG.md"&gt;Ember Data 2.3.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 2.2 and 2.3 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/11/16/ember-2-2-released.html"/>
    <id>http://emberjs.com/blog/2015/11/16/ember-2-2-released.html</id>
    <published>2015-11-15T16:00:00-08:00</published>
    <updated>2015-11-15T16:00:00-08:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 2.2, a minor version release of Ember with backwards compatible
changes, is released today. This release represents the work of over 60
contributors.&lt;/p&gt;

&lt;p&gt;Ember.js 2.3 beta, the branch of Ember that will be released as stable in
roughly six weeks...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 2.2, a minor version release of Ember with backwards compatible
changes, is released today. This release represents the work of over 60
contributors.&lt;/p&gt;

&lt;p&gt;Ember.js 2.3 beta, the branch of Ember that will be released as stable in
roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-js-2-2'&gt;Changes in Ember.js 2.2&lt;/h3&gt;
&lt;p&gt;Ember.js releases occur every six weeks, regardless of how significant the
changes are. 2.2 introduces no new features, but does include performance
improvements and bug fixes.&lt;/p&gt;

&lt;p&gt;Notable improvements include a performance fix for Ember&amp;#39;s &lt;code&gt;_super&lt;/code&gt;
implementation under minification, and the skipping of &lt;code&gt;view&lt;/code&gt; and &lt;code&gt;controller&lt;/code&gt;
template locals logic when operating without the view and controller legacy
addons.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.2, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.2.0/CHANGELOG.md"&gt;Ember.js 2.2.0 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-2-3-beta'&gt;Ember.js 2.3 beta&lt;/h3&gt;
&lt;p&gt;Ember.js 2.3 beta is released today, and in six weeks it will become the
new stable version of Ember. This beta cycle introduces several new features
and a notable deprecation.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-visit-code-api'&gt;&lt;code&gt;visit&lt;/code&gt; API&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/tildeio/ember-cli-fastboot"&gt;Ember FastBoot&lt;/a&gt; and new testing
APIs motivated the addition of a &lt;code&gt;visit&lt;/code&gt; method for &lt;code&gt;Ember.Application&lt;/code&gt; and
&lt;code&gt;Ember.ApplicationInstance&lt;/code&gt; objects. Called on &lt;code&gt;Ember.Application&lt;/code&gt; this
method accepts several configuration options.&lt;/p&gt;

&lt;p&gt;For example, you might use this API to manually boot an Ember application
and then instruct it to visit a URL:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; MyApp from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;my-app&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="predefined"&gt;$&lt;/span&gt;(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
  let App = MyApp.create({ &lt;span class="key"&gt;autoboot&lt;/span&gt;: &lt;span class="predefined-constant"&gt;false&lt;/span&gt; });
  let options = {
    &lt;span class="comment"&gt;// Prevent this application from updating the URL in the address bar&lt;/span&gt;
    &lt;span class="key"&gt;location&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;none&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="comment"&gt;// Override the default `rootElement` to render into a specific `div`&lt;/span&gt;
    &lt;span class="comment"&gt;// on the page&lt;/span&gt;
    &lt;span class="key"&gt;rootElement&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;#demo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;
  };
  App.visit(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;/demo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, options).then((&lt;span class="comment"&gt;/* appInstance */&lt;/span&gt;) =&amp;gt; {
    &lt;span class="predefined"&gt;$&lt;/span&gt;(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;#loading&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).fadeOut(); &lt;span class="comment"&gt;// Or any other logic after rendering&lt;/span&gt;
  });
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Importantly, the addition of this API means &lt;strong&gt;FastBoot
is now usable with Ember.js beta&lt;/strong&gt;. FastBoot itself remains experimental,
however this is the first time you can use it with a stock build of Ember.js.
The &lt;a href="https://github.com/tildeio/ember-cli-fastboot"&gt;README.md for ember-cli-fastboot&lt;/a&gt;
is the best place to start if you want to try FastBoot.&lt;/p&gt;

&lt;p&gt;You can read more about the &lt;code&gt;visit&lt;/code&gt; API and its use cases in the &lt;a href="https://github.com/emberjs/ember.js/blob/0810d913f9d358e5d37d25a1efd2295ebaebc6e2/packages/ember-application/lib/system/application.js#L985-L1181"&gt;unpublished
&lt;code&gt;visit&lt;/code&gt; API documentation&lt;/a&gt;.
Reviewing the main implementation PR at &lt;a href="https://github.com/emberjs/ember.js/pull/12394"&gt;emberjs/emberjs #12394&lt;/a&gt; and the integration into FastBoot at
&lt;a href="https://github.com/tildeio/ember-cli-fastboot/pull/71"&gt;tildeio/ember-cli-fastboot #71&lt;/a&gt;
may also be helpful.&lt;/p&gt;

&lt;p&gt;Many thanks to &lt;a href="https://twitter.com/tomdale"&gt;@tomdale&lt;/a&gt; and
&lt;a href="https://twitter.com/chancancode"&gt;@chancancode&lt;/a&gt; for their work implementing
this API and for their continued work on FastBoot.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_hash-helper'&gt;Hash Helper&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;(hash&lt;/code&gt; helper creates an object from arguments passed to it during
invocation, and then returns that object. For example this usage would create an object with
the property &lt;code&gt;name&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt; &lt;span class="error"&gt;(&lt;/span&gt;&lt;span class="attribute-name"&gt;hash&lt;/span&gt; &lt;span class="attribute-name"&gt;name&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;Bob&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="error"&gt;)&lt;/span&gt; &lt;span class="attribute-name"&gt;as&lt;/span&gt; &lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="attribute-name"&gt;person&lt;/span&gt;&lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  Hello, my name is &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;person.name&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;with&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This helper is introduced to make the new contextual components feature
more convenient, and it will often be used with the &lt;code&gt;{{yield&lt;/code&gt; helper. For
example:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;{{! app/templates/components/nice-person.hbs }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;yield&lt;/span&gt; &lt;span class="error"&gt;(&lt;/span&gt;&lt;span class="attribute-name"&gt;hash&lt;/span&gt; &lt;span class="attribute-name"&gt;name&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;Bob&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="error"&gt;)&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;{{! app/templates/index.hbs }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;nice-person&lt;/span&gt; &lt;span class="attribute-name"&gt;as&lt;/span&gt; &lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="attribute-name"&gt;person&lt;/span&gt;&lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  Hello, my name is &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;person.name&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;nice-person&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="https://github.com/emberjs/ember.js/blob/04ec1c639e3ac7aa93ec24bf7fcf35e18c62fed6/packages/ember-htmlbars/lib/helpers/hash.js#L6-L31"&gt;unpublished documentation&lt;/a&gt; for
for details on this helper, and read the contextual components section below
for further context.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://twitter.com/serabe"&gt;@Serabe&lt;/a&gt; for his implementation of this
feature and to &lt;a href="https://twitter.com/MiguelCamba"&gt;@MiguelCamba&lt;/a&gt; for his fantastic
&lt;a href="https://github.com/cibernox/ember-hash-helper-polyfill"&gt;ember-hash-helper-polyfill&lt;/a&gt;
addon. Using the polyfill you can start using &lt;code&gt;(hash&lt;/code&gt; with Ember.js 1.13 or
later.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_contextual-components'&gt;Contextual Components&lt;/h4&gt;
&lt;p&gt;The new contextual components feature allows for multiple components to
privately share data, but be invoked in a flexible manner. For example,
this &lt;code&gt;{{alert-box}}&lt;/code&gt; component yields a contextual component composed
of the &lt;code&gt;alert-box-button&lt;/code&gt; component and the attribute &lt;code&gt;onclick&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;{{! app/templates/components/alert-box.hbs }}&lt;/span&gt;
&lt;span class="tag"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="attribute-name"&gt;class&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;alert-box&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;yield&lt;/span&gt; &lt;span class="error"&gt;(&lt;/span&gt;&lt;span class="attribute-name"&gt;hash&lt;/span&gt;
    &lt;span class="attribute-name"&gt;close-button&lt;/span&gt;=&lt;span class="error"&gt;(&lt;/span&gt;&lt;span class="attribute-value"&gt;component&lt;/span&gt; &lt;span class="error"&gt;'&lt;/span&gt;&lt;span class="attribute-name"&gt;alert-box-button&lt;/span&gt;&lt;span class="error"&gt;'&lt;/span&gt; &lt;span class="attribute-name"&gt;onclick&lt;/span&gt;=&lt;span class="error"&gt;(&lt;/span&gt;&lt;span class="attribute-value"&gt;action&lt;/span&gt; &lt;span class="error"&gt;'&lt;/span&gt;&lt;span class="attribute-name"&gt;close&lt;/span&gt;&lt;span class="error"&gt;'&lt;/span&gt;&lt;span class="error"&gt;)&lt;/span&gt;&lt;span class="error"&gt;)&lt;/span&gt;
  &lt;span class="error"&gt;)&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;span class="tag"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;{{! app/templates/index.hbs }}&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;alert-box&lt;/span&gt; &lt;span class="attribute-name"&gt;as&lt;/span&gt; &lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="attribute-name"&gt;box&lt;/span&gt;&lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  Danger, Will Robinson!
  &lt;span class="tag"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="attribute-name"&gt;style&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="key"&gt;float&lt;/span&gt;:&lt;span class="value"&gt;right&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;box.close-button&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
      It's just a plain old meteorite.
    &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;box.close-button&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  &lt;span class="tag"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;alert-box&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Contextual components are created using the nested form of the
&lt;code&gt;component&lt;/code&gt; helper, and may be passed attrs and positional params. Contextual
components must be invoked with a &lt;code&gt;.&lt;/code&gt; in their path, unless they are being
passed to the invoking &lt;code&gt;{{component&lt;/code&gt; helper.&lt;/p&gt;

&lt;p&gt;This new feature is a powerful tool for addon authors, allowing them to
yield components without having arguments to those components become de-facto
public API. In addition, when the local lookup feature of Ember&amp;#39;s pods
architecture arrives the combination of these features will permit
completely private components to be yielded.&lt;/p&gt;

&lt;p&gt;For more information about contextual components see the &lt;a href="https://github.com/emberjs/ember.js/blob/04ec1c639e3ac7aa93ec24bf7fcf35e18c62fed6/packages/ember-htmlbars/lib/keywords/component.js#L52-L73"&gt;unpublished
documentation&lt;/a&gt;. Further details about the API design decisions can be found in
&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0064-contextual-component-lookup.md"&gt;RFC #64&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks again to &lt;a href="https://twitter.com/serabe"&gt;@Serabe&lt;/a&gt; for his implementation
of this feature as well as &lt;a href="https://twitter.com/mixonic"&gt;@mixonic&lt;/a&gt; and
&lt;a href="https://twitter.com/_mmun"&gt;@_mmun&lt;/a&gt; for their efforts on the RFC and design.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_introducing-owners-and-deprecating-containers'&gt;Introducing Owners and Deprecating Containers&lt;/h4&gt;
&lt;p&gt;Ember&amp;#39;s container API is one of the more commonly used private APIs still
exposed. In Ember.js 2.1, a major refactor of application
boot removed access to the container from initializers and instance initializers,
creating public API alternatives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Ember 2.3, accessing the &lt;code&gt;container&lt;/code&gt; property on a framework-generated
object will be deprecated in favor of a public owner API.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For example, this component will dynamically lookup an audio service based
on the &lt;code&gt;audioType&lt;/code&gt; of its model:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
17
18
19
&lt;strong&gt;20&lt;/strong&gt;
21
22
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; Ember from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;
const {
  Component,
  computed,
  getOwner
} = Ember;

&lt;span class="comment"&gt;// Usage:&lt;/span&gt;
&lt;span class="comment"&gt;//&lt;/span&gt;
&lt;span class="comment"&gt;//   {{play-audio model=audioModel}}&lt;/span&gt;
&lt;span class="comment"&gt;//&lt;/span&gt;
&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; Component.extend({
  &lt;span class="key"&gt;audioService&lt;/span&gt;: computed(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;model.audioType&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    let owner = getOwner(&lt;span class="local-variable"&gt;this&lt;/span&gt;);
    let serviceName = &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;model.audioType&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="keyword"&gt;return&lt;/span&gt; owner.lookup(&lt;span class="error"&gt;`&lt;/span&gt;service:audio-&lt;span class="predefined"&gt;$&lt;/span&gt;{serviceName}&lt;span class="error"&gt;`&lt;/span&gt;);
  }),
  click() {
    let player = &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;audioService&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
    player.play(&lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;model.file&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;));
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The return value of &lt;code&gt;getOwner&lt;/code&gt; will be an &lt;a href="http://emberjs.com/api/classes/Ember.ApplicationInstance.html"&gt;&lt;code&gt;Ember.ApplicationInstance&lt;/code&gt;&lt;/a&gt;
for objects generated by the framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This change means ember-qunit 0.4.16+ is required for use with Ember 2.3.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For more information about migrating code from using &lt;code&gt;container&lt;/code&gt; to &lt;code&gt;getOwner&lt;/code&gt;,
see the &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_injected-container-access"&gt;deprecation guide&lt;/a&gt;.
Further details about the API design decisions can be found in
&lt;a href="https://github.com/emberjs/ember.js/pull/11874"&gt;emberjs/emberjs #11874&lt;/a&gt;
and &lt;a href="https://github.com/emberjs/ember.js/issues/12555"&gt;emberjs/emberjs #12555&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks to &lt;a href="https://twitter.com/dgeb"&gt;@dgeb&lt;/a&gt; for his tireless efforts
implementing this feature, and for his time buildling consensus around
improvements to the Ember dependency injection API. Additionally credit is
due to &lt;a href="https://twitter.com/rwjblue"&gt;@rwjblue&lt;/a&gt; for his upgrade PRs to
&lt;a href="https://github.com/emberjs/data/pull/3912"&gt;Ember Data&lt;/a&gt;, &lt;a href="https://github.com/ef4/liquid-fire/pull/388"&gt;Liquid-Fire&lt;/a&gt;, and &lt;a href="https://github.com/jamesarosen/ember-i18n/pull/336"&gt;Ember-i18n&lt;/a&gt;.
These provide a good example of how to upgrade any addon or app codebase.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.3, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.3.0-beta.1/CHANGELOG.md"&gt;Ember.js 2.3.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data 2.1 and 2.2 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/10/05/ember-data-2-1-released.html"/>
    <id>http://emberjs.com/blog/2015/10/05/ember-data-2-1-released.html</id>
    <published>2015-10-04T17:00:00-07:00</published>
    <updated>2015-10-04T17:00:00-07:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember Data 2.1, a minor version release of Ember Data with bug fixes only, is released today. This release represents the work of over 26 direct contributors, and over 127 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.2 beta.1, the branch of Ember Data that will be released...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember Data 2.1, a minor version release of Ember Data with bug fixes only, is released today. This release represents the work of over 26 direct contributors, and over 127 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.2 beta.1, the branch of Ember Data that will be released as stable in roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_new-features-in-ember-data-2-1'&gt;New Features in Ember Data 2.1&lt;/h2&gt;
&lt;p&gt;There are no new Features introduced in Ember Data 2.1. Instead the
Ember Data team spent this release cycle focused on improving the
guides, API documentation and fixing bugs.&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://github.com/emberjs/data/blob/v2.1.0/CHANGELOG.md"&gt;Ember Data 2.1.0 CHANGELOG&lt;/a&gt; for a full list of all changes.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-data-2-2-beta'&gt;Ember Data 2.2 beta&lt;/h2&gt;
&lt;p&gt;No new features are currently planned for Ember Data 2.2. During the
canary cycle leading to this beta, the Ember Data team and community
have been primarily focused on bug fixes and performance
improvements. The Ember Data team expects the introduction of new
features to resume in Ember Data 2.3.&lt;/p&gt;

&lt;p&gt;For more details on changes in 2.2, review the
&lt;a href="https://github.com/emberjs/data/blob/v2.2.0-beta.1/CHANGELOG.md"&gt;Ember Data 2.2.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 2.1 and 2.2 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/10/04/ember-2-1-released.html"/>
    <id>http://emberjs.com/blog/2015/10/04/ember-2-1-released.html</id>
    <published>2015-10-03T17:00:00-07:00</published>
    <updated>2015-10-03T17:00:00-07:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 2.1, a minor version release of Ember with additive features only, is released today. This release represents the work of over 82 direct contributors, and over 850 commits.&lt;/p&gt;

&lt;p&gt;Ember.js 2.2 beta, the branch of Ember that will be released as stable...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 2.1, a minor version release of Ember with additive features only, is released today. This release represents the work of over 82 direct contributors, and over 850 commits.&lt;/p&gt;

&lt;p&gt;Ember.js 2.2 beta, the branch of Ember that will be released as stable in roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_new-features-in-ember-js-2-1'&gt;New Features in Ember.js 2.1&lt;/h2&gt;
&lt;p&gt;Changes to the Ember&amp;#39;s API in 2.1 are backwards compatible. A summary of the new features in today&amp;#39;s release follows.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-get-code-helper'&gt;&lt;code&gt;{{get}}&lt;/code&gt; Helper&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{get}}&lt;/code&gt; helper allows dynamic property lookup on objects in templates.
For example, these two usages are equivalent:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;user.name&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;get&lt;/span&gt; &lt;span class="attribute-name"&gt;user&lt;/span&gt; &lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="attribute-name"&gt;name&lt;/span&gt;&lt;span class="error"&gt;&amp;quot;&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A property with a value of a string can be passed as the second argument,
making both the object and the property being read dynamic. For example:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;get&lt;/span&gt; &lt;span class="attribute-name"&gt;user&lt;/span&gt; &lt;span class="attribute-name"&gt;somePropertyName&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For documentation on &lt;code&gt;get&lt;/code&gt;, reference the &lt;a href="http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_get"&gt;API documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Big thanks to &lt;a href="https://twitter.com/jmurphyau"&gt;@jmurphyau&lt;/a&gt; for the
implementation of this feature, and for his excellent
&lt;a href="https://github.com/jmurphyau/ember-get-helper"&gt;ember-get-helper&lt;/a&gt; addon that
demonstrated how useful this helper would be. Using his
&lt;a href="https://github.com/jmurphyau/ember-truth-helpers"&gt;ember-truth-helpers&lt;/a&gt; addon
in 1.13 codebases is highly recommended.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-each-in-code-helper'&gt;&lt;code&gt;{{each-in}}&lt;/code&gt; Helper&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;{{each-in}}&lt;/code&gt; helper iterates keys and values of an object. It is similar
conceptually to the &lt;code&gt;for (key in object) {&lt;/code&gt; syntax of JavaScript. For example,
this code would display a list of all property names and values on the &lt;code&gt;user&lt;/code&gt;
object:&lt;/p&gt;
&lt;div class="highlight handlebars "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="tag"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{#&lt;/span&gt;&lt;span class="attribute-name"&gt;each-in&lt;/span&gt; &lt;span class="attribute-name"&gt;user&lt;/span&gt; &lt;span class="attribute-name"&gt;as&lt;/span&gt; &lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="attribute-name"&gt;key&lt;/span&gt; &lt;span class="attribute-name"&gt;value&lt;/span&gt;&lt;span class="error"&gt;|&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
  &lt;span class="tag"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;key&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;: &lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{&lt;/span&gt;&lt;span class="attribute-name"&gt;value&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="inline"&gt;&lt;span class="inline-delimiter"&gt;{{/&lt;/span&gt;&lt;span class="attribute-name"&gt;each-in&lt;/span&gt;&lt;span class="inline-delimiter"&gt;}}&lt;/span&gt;&lt;/span&gt;
&lt;span class="tag"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When using &lt;code&gt;{{each-in}}&lt;/code&gt;, the iterated list of keys will be unbound. If a new
property is set on &lt;code&gt;user&lt;/code&gt; with &lt;code&gt;user.newProp = &amp;#39;newVal&amp;#39;;&lt;/code&gt;, the new property
will not appear.&lt;/p&gt;

&lt;p&gt;For documentation on the &lt;code&gt;{{each-in}}&lt;/code&gt; helper, see the &lt;a href="http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each-in"&gt;API documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://twitter.com/tomdale"&gt;@tomdale&lt;/a&gt; for the
implementation of this feature, and thanks to
&lt;a href="https://twitter.com/miguelcamba"&gt;@miguelcamba&lt;/a&gt; for his followup PRs.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_registry-and-container-reform'&gt;Registry and Container Reform&lt;/h4&gt;
&lt;p&gt;The Ember.js registry and container are some of the most extensively used
private APIs in the framework. They
provided one of the only ways to lookup arbitrary objects from Ember&amp;#39;s
dependency container.&lt;/p&gt;

&lt;p&gt;We are committed to stabilizing this part of the framework and
offering public APIs. This first step creates a normalized way to interact
with &lt;code&gt;register&lt;/code&gt; and &lt;code&gt;lookup&lt;/code&gt; that we expect to last through the 2.x cycle
and beyond.&lt;/p&gt;

&lt;p&gt;In 2.1, &lt;code&gt;Ember.Application&lt;/code&gt; instances are passed as the first argument to &lt;code&gt;initializer&lt;/code&gt;
hooks. &lt;code&gt;initializer&lt;/code&gt; hooks are where dependencies between object types
can be configured, and factories can be registered. Several public APIs will
exist on &lt;code&gt;Ember.Application&lt;/code&gt; instances, some of them new:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;register&lt;/code&gt; - register a factory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inject&lt;/code&gt; - inject a factory into another factory, or all factories of a type&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unregister&lt;/code&gt; - remove a factory from registration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resolveRegistration&lt;/code&gt; - fetch a registered factory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hasRegistration&lt;/code&gt; - check for a registered factory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;registerOption&lt;/code&gt;, &lt;code&gt;registeredOption&lt;/code&gt;, &lt;code&gt;registerOptions&lt;/code&gt;, &lt;code&gt;registeredOptions&lt;/code&gt;,
&lt;code&gt;registerOptionsForType&lt;/code&gt;, &lt;code&gt;registeredOptionsForType&lt;/code&gt; which manage options
for a factory (is it a singleton, can it be instantiated).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Ember.ApplicationInstance&lt;/code&gt; instances are passed as the first argument to
&lt;code&gt;instanceInitializer&lt;/code&gt; hooks in 2.1. &lt;code&gt;instanceInitializer&lt;/code&gt; hooks are where
factories can be fetched out of the configured and booted application.
One relevant public APIs exists on &lt;code&gt;Ember.ApplicationInstance&lt;/code&gt;s:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lookup&lt;/code&gt; - fetch an instance of a factory (with dependencies)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find updates to the guides regarding initializers in the revamped &lt;a href="http://guides.emberjs.com/v2.1.0/applications/applications-and-instances/"&gt;Application Concerns&lt;/a&gt; section. The
API documentation is similarly updated at the &lt;a href="http://emberjs.com/api/modules/ember-application.html"&gt;ember-application namespace&lt;/a&gt;, &lt;a href="http://emberjs.com/api/classes/Ember.Application.html"&gt;Ember.Application&lt;/a&gt; class, and &lt;a href="http://emberjs.com/api/classes/Ember.ApplicationInstance.html"&gt;Ember.ApplicationInstance&lt;/a&gt; class.&lt;/p&gt;

&lt;p&gt;This feature also introduces two minor deprecations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Expecting two arguments for an initializer hook is deprecated&lt;/li&gt;
&lt;li&gt;Calling &lt;code&gt;appInstance.container.lookup&lt;/code&gt; on the first argument to an instance
initializer is deprecated in favor of &lt;code&gt;appInstance.lookup&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deprecations flag where we expect to change an API in the future. It is not
recommended that you use deprecated functionality, but you can also safely
silence a deprecation message and continue to use that functionality until
its removal date.&lt;/p&gt;

&lt;p&gt;A huge thanks to the tireless &lt;a href="https://twitter.com/dgeb"&gt;@dgeb&lt;/a&gt; for his work on the
RFC, implementation, and documentation for these changes. They represent a significant
improvement in Ember&amp;#39;s dependency injection system.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_deprecate-and-warn-handlers'&gt;Deprecate and Warn Handlers&lt;/h4&gt;
&lt;p&gt;In the run up to Ember 2.0, it became clear that the tooling for management of
deprecations was poor. One of the reasons for this was the lack of a public,
documented API for deciding how a deprecations and warnings should be handled.
2.1 introduces a proper API for our tooling to build upon.&lt;/p&gt;

&lt;p&gt;The default behavior of a deprecation or warning is to log to the console. To change
this behavior, register a handler and write custom logic. For example this
handler would throw an exception for any deprecation messages with the word
&lt;code&gt;should&lt;/code&gt; in them:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.Debug.registerDeprecationHandler((message, options, next) =&amp;gt; {
  &lt;span class="keyword"&gt;if&lt;/span&gt; (message.indexOf(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;should&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) !== -&lt;span class="integer"&gt;1&lt;/span&gt;) {
    &lt;span class="keyword"&gt;throw&lt;/span&gt; &lt;span class="keyword"&gt;new&lt;/span&gt; Error(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;Deprecation message with should: &lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;+message);
  } &lt;span class="keyword"&gt;else&lt;/span&gt; {
    &lt;span class="comment"&gt;// defer to whatever handler was registered before this one&lt;/span&gt;
    next(message, options);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In this example, all warnings are silenced:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;// next is not called, so no warnings get the default behavior&lt;/span&gt;
Ember.Debug.registerWarnHandler(() =&amp;gt; {});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Handlers are provided with the following data through arguments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;message&lt;/code&gt; is the text logged by default&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options&lt;/code&gt; is an object containing at minimum the property &lt;code&gt;id&lt;/code&gt; in the format &lt;code&gt;package-name.specific-deprecation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; is a caller for the previously registered handler. Often, this is the
default handler.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deprecation handlers will also be provided:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;options.until&lt;/code&gt; is the version of Ember this feature and deprecation will be
removed in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As of Ember 2.0, &lt;code&gt;deprecate&lt;/code&gt; and &lt;code&gt;warn&lt;/code&gt; calls must provide an &lt;code&gt;id&lt;/code&gt; option,
and &lt;code&gt;deprecate&lt;/code&gt; calls must additionally provide an &lt;code&gt;until&lt;/code&gt; option.
Addons not providing this data during
2.x will trigger a deprecation warning.&lt;/p&gt;

&lt;p&gt;For more information see the &lt;a href="http://emberjs.com/api/classes/Ember.Debug.html"&gt;Ember.Debug&lt;/a&gt;
API documentsion. This API can be used with previous versions of Ember via the
&lt;a href="https://github.com/rwjblue/ember-debug-handlers-polyfill"&gt;ember-debug-handlers-polyfill&lt;/a&gt;,
though &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt; data is not provided until Ember 2.0.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://twitter.com/rwjblue"&gt;@rwjblue&lt;/a&gt; for
shipping this API and the polyfill addon, and to &lt;a href="https://twitter.com/mixonic"&gt;@mixonic&lt;/a&gt;
for the RFC.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.1, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.1.0/CHANGELOG.md"&gt;Ember.js 2.1.0 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js-2-2-beta'&gt;Ember.js 2.2 beta&lt;/h2&gt;
&lt;p&gt;No new features are slated for Ember 2.2. During the canary cycle leading to this beta, the core team and community have been primarily focused on performance improvements or feature work still behind a feature flag.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.2, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.2.0-beta.1/CHANGELOG.md"&gt;Ember.js 2.2.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Guides Status Update</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/09/02/ember-guides-status-update.html"/>
    <id>http://emberjs.com/blog/2015/09/02/ember-guides-status-update.html</id>
    <published>2015-09-01T17:00:00-07:00</published>
    <updated>2015-09-01T17:00:00-07:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;The road to Ember 2.0 has been long and rewarding: the community and team have invested in huge efforts to move Ember to a component-based architecture; we released a stable Ember Data; and we unified our development process with Ember CLI. All in...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;The road to Ember 2.0 has been long and rewarding: the community and team have invested in huge efforts to move Ember to a component-based architecture; we released a stable Ember Data; and we unified our development process with Ember CLI. All in all, we&amp;#39;ve made huge progress.&lt;/p&gt;

&lt;p&gt;Unfortunately, our docs efforts haven’t kept up with all of those improvements. We know that many Ember users have been frustrated that they can&amp;#39;t find the resources they need to take advantage of new features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Over the next few releases, we&amp;#39;ll be focusing on major improvements to the content of the Ember Guides and the process of landing new features so we don&amp;#39;t fall behind again.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_upcoming-releases'&gt;Upcoming releases&lt;/h2&gt;
&lt;p&gt;Here&amp;#39;s what you can expect in the coming weeks and months:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember Data&lt;/em&gt;&lt;/strong&gt;: Several of us are working hard to update the Models section of the Guides to properly document Ember Data in its stable form. This should be released imminently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember 2.1&lt;/em&gt;&lt;/strong&gt;: Several people are working on reviewing the Guides from beginning to end to improve the quality of the writing and make sure that all of the information is up to date. We aim to have this completed for the 2.1 release of the Guides.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ember 2.2&lt;/em&gt;&lt;/strong&gt;: A few contributors are writing an updated version of the tutorial that used to be at the beginning of the Guides. We aim to have the first version in the 2.2 release.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_better-process'&gt;Better process&lt;/h2&gt;
&lt;p&gt;Until recently, the Ember Guides and API documentation were maintained by the same developers who wrote the code for Ember.js itself. As the burden has grown, the developers bringing you Ember have stopped being able to tackle both writing the code and documenting it. We&amp;#39;ve realized that we need a more pragmatic and structured approach to keeping the documentation up-to-date.&lt;/p&gt;

&lt;p&gt;We’ve created a new Docs subteam to help drive the direction of the documentation and help make sure that new features always include documentation. It includes existing Ember core team members, along with fresh faces @locks and @michaelrkn. With extra bandwidth from members who are focused exclusively on documentation, we&amp;#39;ve already made great strides in improving the documentation and filling in missing pieces.&lt;/p&gt;

&lt;p&gt;Additionally, the team has agreed that &lt;strong&gt;no new feature will land in a stable release of Ember without documentation and updates to relevant guides&lt;/strong&gt;. We don’t want documentation to languish again.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_getting-involved'&gt;Getting involved&lt;/h2&gt;
&lt;p&gt;Whether you&amp;#39;re a new Ember dev or an old hand, there is lots of work that you can help out with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out issues labeled &lt;a href="https://github.com/emberjs/guides/labels/help%20wanted"&gt;help wanted&lt;/a&gt; on the Guides repo.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href="https://github.com/emberjs/guides/blob/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt; to the Guides.&lt;/li&gt;
&lt;li&gt;If you&amp;#39;d like to help out but get stuck along the way at any point, join us in the &lt;a href="https://embercommunity.slack.com/messages/documentation/"&gt;documentation Slack channel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Contact @locks or @michaelrkn on Slack if you&amp;#39;re interested in joining the Docs subteam.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To help other contributors stay productive, please keep your contributions and questions limited to issues that are not being worked on by other contributors, and avoid asking for status updates. If you&amp;#39;re curious about the progress of the Guides, you can follow along on commits to the &lt;a href="https://github.com/emberjs/guides"&gt;Guides repo&lt;/a&gt; and read the &lt;a href="https://github.com/emberjs/core-notes/tree/master/docs-team"&gt;Docs team weekly meeting minutes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Like all of Ember.js and its sister projects, the Guides are maintained by an all-volunteer team. Please take a moment to thank them online, buy them a beer at your local meetup, and best yet, chip in and help out yourself!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to Yehuda Katz and Leah Silber for reviewing the draft of this post.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data v2.0 Released and v2.1 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2015/09/02/ember-data-2-0-released.html"/>
    <id>http://emberjs.com/blog/2015/09/02/ember-data-2-0-released.html</id>
    <published>2015-09-01T17:00:00-07:00</published>
    <updated>2015-09-01T17:00:00-07:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;We are excited to announce the release of Ember Data 2.0, the
second stable release since 1.13 that includes significant improvements,
cleanup, and cruft removal.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html"&gt;As previously discussed&lt;/a&gt;, Ember Data releases occur in
lockstep with Ember, to help developers...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We are excited to announce the release of Ember Data 2.0, the
second stable release since 1.13 that includes significant improvements,
cleanup, and cruft removal.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html"&gt;As previously discussed&lt;/a&gt;, Ember Data releases occur in
lockstep with Ember, to help developers better reason about
compatibility between these libraries. Ember Data 2.0 is designed to be
used in tandem with Ember 2.0, and like Ember 2.0, we have used the
occasion of a new major version number to remove deprecated features and
clean up the code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ember Data 2.0 is about removing deprecated
functionality, not adding new features&lt;/strong&gt;. If you&amp;#39;ve already started
using Ember Data 1.13 and cleared the deprecations, you should find
upgrading to Ember Data 2.0 to be very straightforward.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_json-api'&gt;JSON API&lt;/h3&gt;
&lt;p&gt;In the &lt;a href="http://emberjs.com/blog/2015/06/18/ember-data-1-13-released.html"&gt;Ember Data 1.13 blog post&lt;/a&gt;, we described how we
had overhauled Ember Data&amp;#39;s internals to use JSON API from top to
bottom.&lt;/p&gt;

&lt;p&gt;Using JSON API dramatically simplified internal code and APIs, but I
want to emphasize that &lt;strong&gt;moving to JSON API internally does not affect
your applications, and you are in no way required to use JSON API
yourself to upgrade to newer versions of Ember Data&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The adapters that determine how your application talks to the backend
server remain unchanged, but this change should make the lives of
adapter authors much simpler going forward.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_unsaved-deleted-records'&gt;Unsaved Deleted Records&lt;/h3&gt;
&lt;p&gt;There is one significant breaking change in the move from 1.13 to
2.0. The short version of this change is &lt;strong&gt;locally deleted (unsaved)
records are no longer removed from RecordArrays and hasMany
arrays. Ember Data now removes the deleted record only after the
delete has been confirmed by the backend. There is also a
&lt;a href="https://github.com/ember-data/ember-data-live-filter-by"&gt;new addon&lt;/a&gt;
to make it easier to implement the old behavior.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Ember Data 1.13, once a record was marked as deleted, it was removed from
all of the &lt;code&gt;RecordArrays&lt;/code&gt; and &lt;code&gt;hasMany&lt;/code&gt; arrays it belonged to. This made it
difficult to create UIs where users could &amp;quot;un-delete&amp;quot; records.&lt;/p&gt;

&lt;p&gt;For example, imagine you are building a document viewer app using Ember Data.
You show the user a list of documents they have access to. When the user
deletes a document, you want it to remain in the list, but with a different
visual treatment to indicate that it has been deleted locally (i.e., not saved back to the server).&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/2015-08-03-ember-data-2-0-released/deleted-document.png" alt="Example UI with deleted document"&gt;&lt;/p&gt;

&lt;p&gt;Building this UI was difficult because the record would be removed from the
list as soon as you called &lt;code&gt;deleteRecord()&lt;/code&gt; on the model.&lt;/p&gt;

&lt;p&gt;In Ember Data 2.0, this will be a lot easier because records are no longer
removed from hasMany relationships or RecordArrays until the delete has been
acknowledged by the adapter. Note that Although deleted records will be visible
in hasMany relationships, they will not be serialized when saving these
relationships back to the server.&lt;/p&gt;

&lt;p&gt;To make the transition easier, the Ember Data team (with help from
&lt;a href="https://github.com/pangratz"&gt;Clemens Müller&lt;/a&gt;) has released an addon called
&lt;a href="https://github.com/ember-data/ember-data-live-filter-by"&gt;Ember Data Live filterBy&lt;/a&gt;. This
allows the &lt;code&gt;filterBy&lt;/code&gt; method on &lt;code&gt;RecordArray&lt;/code&gt;s and &lt;code&gt;hasMany&lt;/code&gt;
relationships to return a live filtered subset of the original
array. This can be used to filter out deleted but unsaved records to
preserve the old behavior, where records are removed from collections
as soon as they are deleted. This addon work with Ember Data 1.13 and Ember Data 2.0.&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;App.PostController = Ember.Controller.extend({
  &lt;span class="function"&gt;allPosts&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.store.peekAll(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;post&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
  }.property()
  &lt;span class="function"&gt;allUndeletedPosts&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;return&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.store.peekAll(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;post&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).filterBy(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;isDeleted&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="predefined-constant"&gt;false&lt;/span&gt;, { &lt;span class="key"&gt;live&lt;/span&gt;: &lt;span class="predefined-constant"&gt;true&lt;/span&gt; });
  }.property()
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h1 class='anchorable-toc' id='toc_ember-data-2-1-beta'&gt;Ember Data 2.1 Beta&lt;/h1&gt;
&lt;p&gt;Ember Data data 2.1 will be the first release following Ember&amp;#39;s 6 week
release cycle. Rather then rush new features into the beta before they
are ready, Ember Data 2.1 will not contain any new features or
deprecations. Instead the Ember Data team is going to spend this cycle
fixing issues, updating documentation and planning features for future
2.x releases.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_changelogs'&gt;CHANGELOGS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/data/blob/v2.0.0/CHANGELOG.md"&gt;Ember Data 2.0.0 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/data/blob/v2.1.0-beta.1/CHANGELOG.md"&gt;Ember Data 2.1.0-beta.1 CHANGELOG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
