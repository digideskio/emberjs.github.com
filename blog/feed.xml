<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2016-04-11T01:00:00+01:00</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember.js 2.4-LTS, 2.5, and 2.6 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/04/11/ember-2-5-released.html"/>
    <id>http://emberjs.com/blog/2016/04/11/ember-2-5-released.html</id>
    <published>2016-04-11T01:00:00+01:00</published>
    <updated>2016-04-11T01:00:00+01:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember 2.4-LTS, the first Ember Long-Term Support release, lands today as Ember
2.4.5. Future versions of 2.4 will be considered part of the LTS channel.
The LTS channel comes with a commitment
that low-risk critical bugfixes and security patches will...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember 2.4-LTS, the first Ember Long-Term Support release, lands today as Ember
2.4.5. Future versions of 2.4 will be considered part of the LTS channel.
The LTS channel comes with a commitment
that low-risk critical bugfixes and security patches will be backported to
these versions. Additionally, any change to commonly used private APIs must be deprecated
in at least one LTS release before removal, making LTS releases a slower
moving target for addons to support.&lt;/p&gt;

&lt;p&gt;2.4-LTS will receive critical bugfixes for the next 6 release cycles (until
roughly November 2016) and security patches for the next 10 release cycles
(until roughly April 2017). For more information about how the LTS process works,
see the blog post &lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;Announcing Ember&amp;#39;s First LTS Release&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ember 2.5, a minor version release of Ember with backwards compatible
changes, is also released today.&lt;/p&gt;

&lt;p&gt;Ember 2.6 beta, the branch of Ember that will be released as stable in
roughly six weeks, is released today.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_notable-deprecations-in-ember-2-4-lts'&gt;Notable deprecations in Ember 2.4-LTS&lt;/h3&gt;
&lt;p&gt;Ember 2.4-LTS deprecates two private APIs. Support for these private APIs will
be removed in Ember 2.6.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/emberjs/ember-legacy-views"&gt;ember-legacy-views&lt;/a&gt; and &lt;a href="https://github.com/emberjs/ember-legacy-controllers"&gt;ember-legacy-controllers&lt;/a&gt;
addons, which rely upon private API, will be supported on Ember 2.4-LTS with a deprecation notice. Although Ember 2.5 will also
support these addons, 2.4-LTS will be a supported platform for much longer than
2.5. Ember 2.6 and 2.8-LTS, when they are released, will not support these addons.&lt;/li&gt;
&lt;li&gt;Use of the &lt;code&gt;{{#render}}&lt;/code&gt; helper in block form is deprecated. Block form usage was an
un-documented and un-intended feature, and will be removed in Ember 2.6. In general,
uses of &lt;code&gt;{{render}}&lt;/code&gt; should be replaced with components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-2-5'&gt;Changes in Ember 2.5&lt;/h3&gt;
&lt;p&gt;Ember 2.5 introduces several minor public API additions.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-ember-assign-code'&gt;&lt;code&gt;Ember.assign&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ember.assign&lt;/code&gt; is a polyfill for the ES2015 &lt;code&gt;Object.assign&lt;/code&gt; feature. &lt;code&gt;assign&lt;/code&gt;
copies the values of all enumerable own properties from one or more source
objects to a target object. For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;let a = {&lt;span class="key"&gt;first&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;John&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};
let b = {&lt;span class="key"&gt;last&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;Lennon&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};
let c = {&lt;span class="key"&gt;band&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;The Beatles&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};

Ember.assign(a, b, c);

&lt;span class="comment"&gt;// a === {first: 'John', last: 'Lennon', band: 'The Beatles'}&lt;/span&gt;
&lt;span class="comment"&gt;// b === {last: 'Lennon'}&lt;/span&gt;
&lt;span class="comment"&gt;// c === {band: 'The Beatles'}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more specifics on &lt;code&gt;assign&lt;/code&gt;, see the &lt;a href="http://emberjs.com/api/#method_assign"&gt;Ember API documentation&lt;/a&gt;
and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;MDN documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_local-lookup-compatibility'&gt;Local Lookup Compatibility&lt;/h4&gt;
&lt;p&gt;As part of the new directory layout effort currently organized around the
&lt;a href="https://github.com/emberjs/rfcs/pull/124"&gt;Module Normalization RFC&lt;/a&gt;,
we intend to introduce a feature called
&amp;quot;local lookup&amp;quot;. This feature will allow for the creation of components or helpers available
only in a single template, instead of being globally scoped as they must be
today. &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;resolve&lt;/code&gt; in Ember 2.5 will accept an optional &lt;code&gt;source&lt;/code&gt; property
on their &lt;code&gt;options&lt;/code&gt; argument. This API change will allow local
lookup to be implemented outside of Ember via the
&lt;a href="https://github.com/ember-cli/ember-resolver"&gt;ember-cli/ember-resolver&lt;/a&gt; library.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_native-event-test-helpers'&gt;Native Event Test Helpers&lt;/h4&gt;
&lt;p&gt;Ember&amp;#39;s acceptance test helpers, such as &lt;code&gt;click()&lt;/code&gt;, have previously used
jQuery event triggers. In 2.5 this behavior has been altered to trigger
native events via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"&gt;&lt;code&gt;dispatchEvent&lt;/code&gt;&lt;/a&gt;.
This change is expected to be completely backwards compatible and was
uncontroversial during the six week beta cycle. It allows the triggering of
non-jQuery event listeners in acceptance tests.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in Ember 2.5, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.5.0/CHANGELOG.md"&gt;Ember.js 2.5.0 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-2-6-beta'&gt;Ember.js 2.6 beta&lt;/h3&gt;
&lt;p&gt;No new features are added in Ember core in 2.6. In
general the core team and
community have remained active around other highly visible parts of
the Ember stack (Ember Data, FastBoot, Glimmer, etc).&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_notable-deprecations'&gt;Notable Deprecations&lt;/h4&gt;
&lt;p&gt;The following deprecations are scheduled for release with Ember 2.6 and will be
removed in Ember 3.0:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ember.String.htmlSafe(aString)&lt;/code&gt; is the preferred API for marking a string
XSS safe for the rendering layer. Use of &lt;code&gt;Ember.Handlebars.SafeString&lt;/code&gt; as
a constructor for safe strings is deprecated, and will be removed.
See the &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_use-ember-string-htmlsafe-over-ember-handlebars-safestring"&gt;deprecation guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;didInitAttrs&lt;/code&gt; hook for component lifecycles is deprecated in favor of
simply using &lt;code&gt;init&lt;/code&gt;. &lt;code&gt;didInitAttrs&lt;/code&gt; had confusing timing
issues, and &lt;code&gt;init&lt;/code&gt; fulfills the same role. See the &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_ember-component-didinitattrs"&gt;deprecation guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;Passing a &lt;code&gt;model&lt;/code&gt; argument to &lt;code&gt;{{render}}&lt;/code&gt; is deprecated in favor of using
a component for the same cases. For example &lt;code&gt;{{render &amp;#39;chat&amp;#39; roomModel}}&lt;/code&gt;
can be refactored into a &lt;code&gt;chat-room&lt;/code&gt; component.
See the &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_model-param-in-code-render-code-helper"&gt;deprecation guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on changes landing in 2.6 beta, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.6.0-beta.1/CHANGELOG.md"&gt;Ember.js 2.6.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing Zoey</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/03/23/introducing-zoey.html"/>
    <id>http://emberjs.com/blog/2016/03/23/introducing-zoey.html</id>
    <published>2016-03-23T00:00:00+00:00</published>
    <updated>2016-03-23T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Over the last few years the Ember project and community have grown, and along with it, the Ember brand. We took care and caution to craft an experience and &lt;em&gt;feel&lt;/em&gt; that while exciting and ambitious, stayed friendly and approachable. As everyone knows...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Over the last few years the Ember project and community have grown, and along with it, the Ember brand. We took care and caution to craft an experience and &lt;em&gt;feel&lt;/em&gt; that while exciting and ambitious, stayed friendly and approachable. As everyone knows, a big part of that is our friendly neighborhood mascot, the Tomster.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xsG0gDkvDPw?rel=0&amp;start=221" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;The time has come to expand the family. Introducing Zoey.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/2016-03/ember-zoey-all-sm.png" class="no-background" alt="Zoey"&gt;&lt;/p&gt;

&lt;p&gt;When chatting about the origins of the Tomster for an EmberConf talk last year, &lt;a href="https://twitter.com/jgwhite"&gt;Jamie White&lt;/a&gt; and Tomster illustrator &lt;a href="http://lindsey.io/"&gt;Lindsey Wilson&lt;/a&gt; had chuckled about how a mascot needed to be a little bit like the perfect pop song. Distinct, but just generic enough that all different sorts of people could see themselves in it, just like the one right lyric in the song makes it the anthem of a million different emotions and situations.&lt;/p&gt;

&lt;p&gt;Tomster&amp;#39;s done a great job of that until now, and with the addition of Zoey, even more amazing Ember developers will be able to see themselves in Ember.&lt;/p&gt;

&lt;p&gt;While Tomster will always be the &lt;em&gt;original&lt;/em&gt; friendly face of Ember, you&amp;#39;ll start seeing Zoey pop up around town too. Stay tuned for some special Zoey swag at EmberConf, and help us welcome her to the family.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Data 2.4 and 2.5 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/03/13/ember-data-2-4-released.html"/>
    <id>http://emberjs.com/blog/2016/03/13/ember-data-2-4-released.html</id>
    <published>2016-03-13T00:00:00+00:00</published>
    <updated>2016-03-13T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember Data 2.4, a minor version release of Ember Data, is released today. This release represents the work of over 20 direct contributors, and over 76 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.5 beta.1, the branch of Ember Data that will be released as stable in roughly...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember Data 2.4, a minor version release of Ember Data, is released today. This release represents the work of over 20 direct contributors, and over 76 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.5 beta.1, the branch of Ember Data that will be released as stable in roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-data-2-4'&gt;Changes in Ember Data 2.4&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_friendly-errors'&gt;Friendly Errors&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/nikz"&gt;@nikz&lt;/a&gt; has implemented
&lt;a href="https://github.com/emberjs/rfcs/pull/101"&gt;RFC 101&lt;/a&gt; which provides
more context for &lt;code&gt;RESTAdapter&lt;/code&gt; and &lt;code&gt;JSONAPIAdapter&lt;/code&gt; errors in Ember
Data. Be sure to check out the
&lt;a href="https://github.com/emberjs/data/pull/3930"&gt;pull request&lt;/a&gt; for more
details.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_importing-modules'&gt;Importing Modules&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/pangratz"&gt;@pangratz&lt;/a&gt; &lt;a href="https://github.com/emberjs/data/pull/4125"&gt;added public paths&lt;/a&gt; to make it easy to import the &lt;code&gt;DS.EmbeddedRecordsMixin&lt;/code&gt; and &lt;code&gt;DS.Serializer&lt;/code&gt; modules.&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;// DS.EmbeddedRecordsMixin&lt;/span&gt;
&lt;span class="reserved"&gt;import&lt;/span&gt; EmbeddedRecordsMixin from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data/serializers/embedded-records-mixin&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="comment"&gt;// DS.Serializer&lt;/span&gt;
&lt;span class="reserved"&gt;import&lt;/span&gt; Serializer from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data/serializer&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_fastboot-support'&gt;Fastboot Support&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/danmcclain"&gt;@danmcclain&lt;/a&gt; added &lt;a href="https://github.com/emberjs/data/pull/4111"&gt;two&lt;/a&gt;
&lt;a href="https://github.com/emberjs/data/pull/4113"&gt;commits&lt;/a&gt; to enable support
for Ember Data with the
&lt;a href="https://github.com/tildeio/ember-cli-fastboot"&gt;Ember CLI Fastboot addon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more details on changes in 2.4, review the
&lt;a href="https://github.com/emberjs/data/blob/v2.4.0/CHANGELOG.md"&gt;Ember Data 2.4.0 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-features-in-ember-data-2-5-beta-1'&gt;Upcoming Features in Ember Data 2.5.beta-1&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_code-ds-finder-include-code'&gt;&lt;code&gt;ds-finder-include&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ds-finder-include&lt;/code&gt; feature allows an &lt;code&gt;include&lt;/code&gt; query parameter to
be specified with using &lt;code&gt;store.findRecord()&lt;/code&gt; and &lt;code&gt;store.findAll()&lt;/code&gt; as
described in &lt;a href="https://github.com/emberjs/rfcs/pull/99"&gt;RFC 99&lt;/a&gt;. The
&lt;code&gt;include&lt;/code&gt; parameter tells JSON-API servers which relationships to
sideload in a response. Thanks to
&lt;a href="https://github.com/HeroicEric"&gt;@HeroicEric&lt;/a&gt; for implementing this
feature.&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;// GET /articles/1?include=comments&lt;/span&gt;

&lt;span class="keyword"&gt;var&lt;/span&gt; article = &lt;span class="local-variable"&gt;this&lt;/span&gt;.store.findRecord(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;article&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="integer"&gt;1&lt;/span&gt;, { &lt;span class="key"&gt;include&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; });
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;// GET /articles?include=comments&lt;/span&gt;

&lt;span class="keyword"&gt;var&lt;/span&gt; article = &lt;span class="local-variable"&gt;this&lt;/span&gt;.store.findAll(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;article&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="key"&gt;include&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt; });
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_code-ds-references-code'&gt;&lt;code&gt;ds-references&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ds-references&lt;/code&gt; feature implements the references API as described
in &lt;a href="https://github.com/emberjs/rfcs/pull/57"&gt;RFC 57&lt;/a&gt;. References is a
low level API to perform meta-operations on records, has-many
relationships and belongs-to relationships:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get the current local data synchronously without triggering a fetch or producing a promise&lt;/li&gt;
&lt;li&gt;notify the store that a fetch for a given record has begun, and provide a promise for its result&lt;/li&gt;
&lt;li&gt;similarly, notify a record that a fetch for a given relationship has begun, and provide a promise for its result&lt;/li&gt;
&lt;li&gt;retrieve server-provided metadata about a record or relationship&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider the following &lt;code&gt;post&lt;/code&gt; model:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="comment"&gt;// app/models/post.js&lt;/span&gt;
&lt;span class="reserved"&gt;import&lt;/span&gt; Model from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data/model&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="reserved"&gt;import&lt;/span&gt; { belongsTo, hasMany } from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data/relationships&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; Model.extend({
  &lt;span class="key"&gt;comments&lt;/span&gt;: hasMany(),
  &lt;span class="key"&gt;author&lt;/span&gt;: belongsTo()
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The references API now allows the possibility to interact with the relationships:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
17
18
19
&lt;strong&gt;20&lt;/strong&gt;
21
22
23
24
25
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;var&lt;/span&gt; post = store.peekRecord(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;post&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="integer"&gt;1&lt;/span&gt;);

&lt;span class="comment"&gt;// check if the author is already loaded, without triggering a request&lt;/span&gt;
&lt;span class="keyword"&gt;if&lt;/span&gt; (post.belongsTo(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;author&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).value() !== &lt;span class="predefined-constant"&gt;null&lt;/span&gt;) {
  console.log(post.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;author.name&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
} &lt;span class="keyword"&gt;else&lt;/span&gt; {
  &lt;span class="comment"&gt;// load the author&lt;/span&gt;
  post.belongsTo(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;author&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).load();
}

&lt;span class="comment"&gt;// reload the author&lt;/span&gt;
post.belongsTo(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;author&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).reload();

&lt;span class="comment"&gt;// check if there are comments, without triggering a request&lt;/span&gt;
&lt;span class="keyword"&gt;if&lt;/span&gt; (post.hasMany(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).value() !== &lt;span class="predefined-constant"&gt;null&lt;/span&gt;) {
  &lt;span class="keyword"&gt;var&lt;/span&gt; ids = post.hasMany(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).ids();

  &lt;span class="keyword"&gt;var&lt;/span&gt; meta = post.hasMany(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).meta();
  console.log(&lt;span class="error"&gt;`&lt;/span&gt;&lt;span class="predefined"&gt;$&lt;/span&gt;{ids.length} comments out of &lt;span class="predefined"&gt;$&lt;/span&gt;{meta.total}&lt;span class="error"&gt;`&lt;/span&gt;);
} &lt;span class="keyword"&gt;else&lt;/span&gt; {
  post.hasMany(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).load();
}

&lt;span class="comment"&gt;// reload comments&lt;/span&gt;
post.hasMany(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;comments&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;).reload();
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/pangratz"&gt;@pangratz&lt;/a&gt; for implementing
this feature.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-ds-transform-pass-options-code'&gt;&lt;code&gt;ds-transform-pass-options&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ds-transform-pass-options&lt;/code&gt; feature allows for smarter transforms
by passing the options object from &lt;code&gt;DS.attr([type], [options])&lt;/code&gt; into
the transform.&lt;/p&gt;
&lt;h5 class='anchorable-toc' id='toc_example'&gt;Example&lt;/h5&gt;&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;app/models/post.js&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; DS.Model.extend({
  &lt;span class="key"&gt;title&lt;/span&gt;: DS.attr(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;string&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;),
  &lt;span class="key"&gt;markdown&lt;/span&gt;: DS.attr(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;markdown&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;, {
    &lt;span class="key"&gt;markdown&lt;/span&gt;: {
      &lt;span class="key"&gt;gfm&lt;/span&gt;: &lt;span class="predefined-constant"&gt;false&lt;/span&gt;,
      &lt;span class="key"&gt;sanitize&lt;/span&gt;: &lt;span class="predefined-constant"&gt;true&lt;/span&gt;
    }
  })
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;app/transforms/markdown.js&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; DS.Transform.extend({
  &lt;span class="function"&gt;serialize&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt; (deserialized, attributeMeta) {
    &lt;span class="keyword"&gt;return&lt;/span&gt; deserialized.raw;
  },

  &lt;span class="function"&gt;deserialize&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt; (serialized, attributeMeta) {
    &lt;span class="keyword"&gt;var&lt;/span&gt; options = attributeMeta.options.markdown || {};

    &lt;span class="keyword"&gt;return&lt;/span&gt; marked(serialized, options);
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/pangratz"&gt;@pangratz&lt;/a&gt; for implementing
this feature and &lt;a href="https://github.com/knownasilya"&gt;@knownasilya&lt;/a&gt; for
proposing the &lt;a href="https://github.com/emberjs/rfcs/pull/1"&gt;RFC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more details on changes in the 2.5 beta, please review the
&lt;a href="https://github.com/emberjs/data/blob/v2.5.0-beta.1/CHANGELOG.md"&gt;Ember Data 2.5.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>2016 Ember Community Survey</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/03/04/2016-ember-community-survey.html"/>
    <id>http://emberjs.com/blog/2016/03/04/2016-ember-community-survey.html</id>
    <published>2016-03-04T00:00:00+00:00</published>
    <updated>2016-03-04T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;2015 was an incredible year to be a web developer, and great year to be
building an Ember app.&lt;/p&gt;

&lt;p&gt;Ember 2.0 landed in August, and with it came the first major shift in
application architecture since Ember left its SproutCore roots. The Ember-CLI
team...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;2015 was an incredible year to be a web developer, and great year to be
building an Ember app.&lt;/p&gt;

&lt;p&gt;Ember 2.0 landed in August, and with it came the first major shift in
application architecture since Ember left its SproutCore roots. The Ember-CLI
team made massive improvements to the speed and quality of our build tooling
several times over, all while continuing to be the foundation for a growing
addon community now topping 2000 projects. Ember-Data stabilized its public
API for the first time in the project&amp;#39;s history, and continues to contend
for the title of most complete client-side JavaScript data layer.&lt;/p&gt;

&lt;p&gt;Other projects, under the official umbrella and outside it, continue to
innovate and mature.&lt;/p&gt;

&lt;p&gt;With 2015 in the rear-view mirror, we should take a moment to check our assumptions
about who is in the Ember community and how they work with the framework.
To that end, we&amp;#39;re pleased to announce
the official 2016 Ember Community Survey!&lt;/p&gt;

&lt;p&gt;&lt;a href="/ember-community-survey-2016" class="survey-button orange button"&gt;
  Survey Landing Page &lt;img src="/images/survey/right-arrow.png" alt="Arrow to the right" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Completing the survey should take about fifteen minutes. We will be accepting
submissions until March 21st.&lt;/p&gt;

&lt;p&gt;Please help us spread the word by sharing the above link on your social
network feeds, at meetups and around your office and other communities.&lt;/p&gt;

&lt;p&gt;With your answers (all anonymous), we will create some visuals and write up our
insights to share at &lt;a href="http://emberconf.com/"&gt;EmberConf 2016&lt;/a&gt; (March 29th-30th).
If you have any immediate questions, feel free to email
Ryan (&lt;a href="https://twitter.com/RyanLaBouve"&gt;@RyanLaBouve&lt;/a&gt;) and
Matthew (&lt;a href="https://twitter.com/mixonic"&gt;@mixonic&lt;/a&gt;) via
&lt;a href="mailto:survey@201-created.com"&gt;survey@201-created.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We look forward to your participation!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 2.4 and 2.5 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/02/29/ember-2-4-released.html"/>
    <id>http://emberjs.com/blog/2016/02/29/ember-2-4-released.html</id>
    <published>2016-02-29T00:00:00+00:00</published>
    <updated>2016-02-29T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Ember.js 2.4, a minor version release of Ember with backwards compatible
changes, is released today. After an additional six-week maturation cycle
as a stable release version, 2.4 will be declared Ember's first Long-Term
Support (LTS) release. For...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ember.js 2.4, a minor version release of Ember with backwards compatible
changes, is released today. After an additional six-week maturation cycle
as a stable release version, 2.4 will be declared Ember&amp;#39;s first Long-Term
Support (LTS) release. For more about the LTS process and what you should
expect, see last week&amp;#39;s post
&lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;Announcing Ember&amp;#39;s First LTS Release&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ember.js 2.5 beta, the branch of Ember that will be released as stable in
roughly six weeks, is also being released today.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-js-2-4'&gt;Changes in Ember.js 2.4&lt;/h3&gt;
&lt;p&gt;No new features are added in Ember core in 2.4. Instead this release
is primarily comprised of bugfixes making it an excellent LTS candidate. In
general the core team and
community have remained active around other highly visible parts of
the Ember stack (Ember CLI, Ember Data, FastBoot, Glimmer, etc).&lt;/p&gt;

&lt;p&gt;In six weeks, the current release build of 2.4 will become Ember&amp;#39;s first
LTS release. Builds on the LTS channel will receive critical bugfixes covering the
subsequent six release cycles (~36 weeks), and security patches for the subsequent
ten release cycles (~60 weeks). If your organization intends to remain on the
LTS channel, we strongly suggest you attempt updating your application to
2.4 and open any issues in the next six weeks.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.4, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.4.1/CHANGELOG.md"&gt;Ember.js 2.4.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_ember-js-2-5-beta'&gt;Ember.js 2.5 beta&lt;/h3&gt;
&lt;p&gt;Ember 2.5 introduces several minor public API additions.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-ember-assign-code'&gt;&lt;code&gt;Ember.assign&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ember.assign&lt;/code&gt; is a polyfill for the ES2015 &lt;code&gt;Object.assign&lt;/code&gt; feature. &lt;code&gt;assign&lt;/code&gt;
copies the values of all enumerable own properties from one or more source
objects to a target object. For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;let a = {&lt;span class="key"&gt;first&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;John&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};
let b = {&lt;span class="key"&gt;last&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;Lennon&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};
let c = {&lt;span class="key"&gt;band&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;The Beatles&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;};

Ember.assign(a, b, c);

&lt;span class="comment"&gt;// a === {first: 'John', last: 'Lennon', band: 'The Beatles'}&lt;/span&gt;
&lt;span class="comment"&gt;// b === {last: 'Lennon'}&lt;/span&gt;
&lt;span class="comment"&gt;// c === {band: 'The Beatles'}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more specifics on &lt;code&gt;assign&lt;/code&gt;, see the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;MDN documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_local-lookup-compatibility'&gt;Local Lookup Compatibility&lt;/h4&gt;
&lt;p&gt;As part of the &amp;quot;pods&amp;quot; directory layout, we intend to introduce a feature called
&amp;quot;local lookup&amp;quot;. This feature will allow for the creation of components available
only in a single template, instead of being globally scoped as they must be
today. &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;resolve&lt;/code&gt; in Ember 2.5 will accept an optional &lt;code&gt;source&lt;/code&gt; property
on their &lt;code&gt;options&lt;/code&gt; argument. This API change will local
lookup to be implemented outside of Ember via the
&lt;a href="https://github.com/ember-cli/ember-resolver"&gt;ember-cli/ember-resolver&lt;/a&gt; library.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_native-event-test-helpers'&gt;Native Event Test Helpers&lt;/h4&gt;
&lt;p&gt;Ember&amp;#39;s acceptance test helpers, such as &lt;code&gt;click()&lt;/code&gt; have previously used
jQuery event triggers. In 2.5 this behavior has been altered to trigger
native events via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"&gt;&lt;code&gt;dispatchEvent&lt;/code&gt;&lt;/a&gt;.
This change is expected to be completely backwards compatible, and enable
the triggering of non-jQuery event listeners in acceptance tests.&lt;/p&gt;

&lt;p&gt;For more details on changes landing in 2.5, review the
&lt;a href="https://github.com/emberjs/ember.js/blob/v2.5.0-beta.1/CHANGELOG.md"&gt;Ember.js 2.5.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_update-ember-2-4-1-released'&gt;Update: Ember 2.4.1 Released&lt;/h3&gt;
&lt;p&gt;Shortly after Ember 2.4.0 was released, we have identified a regression that
caused incorrect deprecation warnings to be emitted. Specifically, we intended
to emit deprecation warnings when either (or both) of the legacy addons are
installed. Instead, the check was inverted, causing the deprecation warnings to
be emitted only if the addons are &lt;em&gt;not&lt;/em&gt; installed.&lt;/p&gt;

&lt;p&gt;Ember 2.4.1 has been released to address this error.&lt;/p&gt;

&lt;p&gt;It should be noted that the production builds for 2.4.0 are &lt;em&gt;not&lt;/em&gt; affected by
this regression, since deprecation warnings are only present in development
builds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Announcing Ember's First LTS Release</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"/>
    <id>http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html</id>
    <published>2016-02-25T00:00:00+00:00</published>
    <updated>2016-02-25T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Currently, Ember uses &lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html"&gt;release channels&lt;/a&gt;
to help users balance between a desire for new features (canary or beta
channels) with stability (the release channel). While semver guarantees mean
that upgrades are quite straightforward, some users aren't able...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Currently, Ember uses &lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html"&gt;release channels&lt;/a&gt;
to help users balance between a desire for new features (canary or beta
channels) with stability (the release channel). While semver guarantees mean
that upgrades are quite straightforward, some users aren&amp;#39;t able to upgrade
every six weeks. To address &lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0056-improved-release-cycle.md#problems-with-the-1x-model"&gt;these needs&lt;/a&gt;,
we are announcing a new &lt;abbr title="Long-Term Support"&gt;LTS&lt;/abbr&gt; release
channel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ember 2.4 will be the first LTS release of the core framework, and will
continue every four releases thereafter.&lt;/strong&gt; Additionally, we&amp;#39;ve updated the
&lt;a href="http://emberjs.com/builds/"&gt;emberjs.com/builds&lt;/a&gt; page with better guidance
about when and how to use each of the channels.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/2016-02/lts-tomster.png" class="no-background float-right" alt="LTS Tomster" width="200"&gt;&lt;/p&gt;

&lt;p&gt;For our users, LTS releases allow you to upgrade less frequently while still
getting support from the Ember project and the wider ecosystem.&lt;/p&gt;

&lt;p&gt;For addon authors, LTS releases allow you to know which versions of Ember to
focus effort on.&lt;/p&gt;

&lt;p&gt;As a project, Ember will provide security and critical bugfixes for the most
recent LTS release, in addition to the most recent release (as we do today).
We will also avoid breaking heavily used private APIs without first
deprecating them in a previous LTS release.&lt;/p&gt;

&lt;p&gt;You can read more about the problems we tried to solve and details about how
it works in &lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0056-improved-release-cycle.md#proposal-lts-releases"&gt;RFC #56&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_the-lts-release-process'&gt;The LTS Release Process&lt;/h3&gt;
&lt;p&gt;The existing release channels allow you to make a tradeoff. On canary, you get
features as quickly as they land, but get no guarantees about those features.
On the stable release channel, you have to wait 12 weeks for features to
stabilize and make their way through the beta process, but you are rewarded
with semver guarantees.&lt;/p&gt;

&lt;p&gt;While this provides all the flexibility you need to make stability vs. features
tradeoff, there is another orthogonal dimension: how often you can schedule
time to upgrade. LTS releases give the community an alternative, sanctioned
schedule that works better for users who prefer a slower pace.&lt;/p&gt;

&lt;p&gt;By synchronizing the timing that these users upgrade, the community can decide
to focus energy on specific versions, rather than a scattershot attempt to
support every possible combination. This should result in more consistent
support and easier upgrades for users on the LTS channel.&lt;/p&gt;

&lt;p&gt;The Ember 2.4 branch will be moved into the LTS release channel six weeks after
Ember 2.4.0. In other words, Ember 2.4 LTS will ship at the same time as Ember
2.5.0. This means that features begin on Canary, spend six weeks on beta before
making it into the stable channel, and spend another six weeks on the stable
channel before making it into the LTS release channel.&lt;/p&gt;

&lt;p&gt;This same process repeats every four releases, meaning that the next release on
the LTS channel will be Ember 2.8 LTS, which will ship at the same time as
Ember 2.9.0.&lt;/p&gt;

&lt;p&gt;For example, the expected release of Ember 2.4 stable (currently in beta) is on
February 26th. To give you a sense for the cadence of our release channels, the
projected release timeline is as follows.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/2016-02/Releases@3x.svg" alt="LTS release timeline"&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LTS releases will receive critical bugfixes for 6 release cycles (36 weeks).&lt;/strong&gt;
This means we will support Ember 2.4 LTS with critical bugfixes until Ember
2.10.0 is released, around November 4, 2016.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LTS releases will receive security patches for 10 release cycles (60 weeks).&lt;/strong&gt;
This means we will support Ember 2.4 LTS with security patches at least until
Ember 2.14.0 is released, around April 21, 2017.&lt;/p&gt;

&lt;p&gt;As you can see in the above diagram, Ember 2.8 LTS is projected to ship around
September 23, 2016. This gives you plenty of time to complete the migration to
the next LTS release once it comes out. As always, because Ember 2.8 is semver
compatible with Ember 2.4, the upgrade should be relatively smooth.&lt;/p&gt;

&lt;p&gt;By the time 2.8 rolls around in roughly six months, any addons that make use
of the private &lt;code&gt;view&lt;/code&gt; APIs should have had a chance to update.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_the-lts-guarantees'&gt;The LTS Guarantees&lt;/h3&gt;
&lt;p&gt;What makes an LTS release different than a stable Ember release? LTS releases
come with guarantees about API stability and security:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Because each LTS release will receive security fixes for 60 weeks, we will
backport them to at least the two most recent LTS releases. &lt;a href="http://emberjs.com/security/"&gt;Read more about
Ember&amp;#39;s security policy&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Release notes for each LTS will contain a summary of features and
deprecations added since the previous LTS. This will likely consist of a
number of links to documentation, guides, and release notes for stable
releases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Addons and applications should constrain themselves to using Ember&amp;#39;s public
APIs. However, in practice we recognize that experimentation and use of
&amp;quot;intimate&amp;quot; APIs is a reality. To ensure addons and apps using these intimate
APIs have a migration path forward, any change to a heavily used private APIs
will receive a deprecation warning in at least one LTS release. This gives
LTS users and the addon community about six months to migrate away. For
example, the &lt;code&gt;view&lt;/code&gt; APIs (private in Ember 2.x) will be marked as deprecated
in Ember 2.4 LTS, and removed before Ember 2.8 LTS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We encourage addon authors to maintain support for the latest LTS release, in
addition to tracking changes in the stable releases.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In practice, since these releases still abide by &lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;,
upgrading from LTS release to LTS release should not be significantly more work
than upgrading along the six-week release cycle.&lt;/p&gt;

&lt;p&gt;Upgrading less frequently will mean, of course, that a developer will wait
longer to take advantage of new features. Additionally, it means the changes in
best practices between releases (and in the number of deprecations) may feel
more significant.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_legacy-view-and-controller-addons'&gt;Legacy View and Controller Addons&lt;/h3&gt;
&lt;p&gt;Ember has provided the &lt;a href="https://github.com/emberjs/ember-legacy-views"&gt;ember-legacy-views&lt;/a&gt;
and &lt;a href="https://github.com/emberjs/ember-legacy-controllers"&gt;ember-legacy-controllers&lt;/a&gt;
addons since Ember 1.13. For large codebases, these addons provide a slower
off-ramp for legacy view and controller features. Big apps can move to Ember
2.0 without the complete removal of views.&lt;/p&gt;

&lt;p&gt;These addons rely on several private APIs expected to undergo significant
refactoring in Ember 2.5 or 2.6. Therefore, the Ember 2.4 LTS will likely be
the last LTS to support these addons. They will become unsupported in September
or October with the release of Ember 2.8 LTS.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_see-you-soon'&gt;See You Soon&lt;/h3&gt;
&lt;p&gt;LTS releases are just one of the many things we&amp;#39;ve been working on; the core
team has had a &lt;em&gt;long&lt;/em&gt; couple of months and we&amp;#39;re excited to share everything.
There will be more announcements and plans shared at &lt;a href="http://emberconf.com/"&gt;EmberConf&lt;/a&gt;
(March 29-30 in Portland), looking forward to seeing so many of you there!&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/2016-02/release-tomsters.png" class="no-background" alt="The Release Tomsters Family"&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
